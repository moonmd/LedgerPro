# Basic CI/CD workflow for LedgerPro
name: LedgerPro CI/CD

on:
  push:
    branches: [ "main", "develop" ] # Adjust branches as needed
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js for Frontend Linting
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use a version compatible with Next.js 14

      - name: Install Frontend Dependencies & Lint
        working-directory: ledgerpro/frontend
        run: |
          npm install
          npm run lint

      - name: Set up Python for Backend Linting
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Backend Dependencies & Lint
        working-directory: ledgerpro/backend
        run: |
          pip install flake8
          flake8 . # Using flake8 as per .flake8 config

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint # Run after linting
    strategy:
      matrix:
        node-version: [20.x]
        python-version: [3.12]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js for Frontend Tests
        if: matrix.node-version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Frontend Dependencies & Test
        if: matrix.node-version
        working-directory: ledgerpro/frontend
        run: |
          npm install
          npm run test # Placeholder test script

      - name: Set up Python for Backend Tests
        if: matrix.python-version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Backend Dependencies & Test
        if: matrix.python-version
        working-directory: ledgerpro/backend
        run: |
          pip install -r requirements.txt
          python tests.py # Placeholder test script

  build:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: tests # Run after tests pass
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js for Frontend Build
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Frontend Dependencies & Build
        working-directory: ledgerpro/frontend
        run: |
          npm install
          npm run build

      - name: Set up Python for Backend (No specific build step for Django like this, more about packaging)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Placeholder for Backend Build/Package
        working-directory: ledgerpro/backend
        run: |
          echo "Backend build/packaging step placeholder (e.g., creating a wheel, docker image)"
          # Example: pip wheel -w dist . (if setup.py exists)

# Placeholder for deployment job (to be expanded later)
#  deploy_staging:
#    name: Deploy to Staging
#    runs-on: ubuntu-latest
#    needs: build
#    environment:
#      name: staging
#      url: <your_staging_url> # Replace with actual staging URL
#    if: github.ref == 'refs/heads/develop' # Example: Deploy develop branch to staging
#    steps:
#      - name: Placeholder for Staging Deployment
#        run: echo "Deploying to staging environment..."
